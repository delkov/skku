P. Prusinkiewicz, A. Lindenmayer, The algorithmic beauty of plants, 1996
M. de Berg, O. Cheong, M. van Kreveld, M. Overmars, Computational Geometry. Algorithms and Applications, 2008
Ф. Препарата, М. Шеймос, Вычислительная геометрия, 1989

-3)Математика и правдоподобные рассуждения
-2)Математическое открытие
-1) Конкретная матматика
0) Вирт - алгоритмы
0+0) Вирт, «Алгоритмы + структуры данных = программы»
1) Сейджвик - алгоритмы
2) Кормент - введние в алгоритмы
3) Сейджвик - анал. комбинаторика
4)Совершенный код
5)Программист-прагматик. Путь от подмастерья к мастеру


Введение в теорию баз данных
Практика программирования
Мифический человеко-месяц
От орошего к великому
Дхен и искусство ухода за мотоциклом
 
* нужно ходить на интервью

* руководитель хочет снять ответсвенность с него на вас (за это он и платит).
* нужно придти и предложить руководителю и обсудить. -- БЫТЬ ИНИЦИАТИВНЫМ!

*  когда работаешь, нужно ходить по рынку. вдруг где-то лучше.
* удваиваить срок, при планировании. кажется 2 дня -> 4 дня.

хороший прогер:
- сделал, что сказал.
- сделал в срок
- без выебонов.

как работать:
1) планируем работу
2) организовываем работу (убираем мешающие элементы)
3) мотивируем себя
4) контроль (редлайн, дедлайн, прокрестинация)

S.M.A.R.T goals
S - СПЕЦИФИКА
M - ИЗМЕРИМОСТЬ (ТОЧНО ПОНЯТЬ, СДЕЛАНО ИЛИ НЕТ)
A - КОМУ ПОРУЧЕНО 
R - РЕАЛЬНОСТЬ ЦЕЛИ
T - ДЕДЛАЙН (В СРОК)


О работе:
1) как зарабатываются деньги в вашей компании



* новое
- облака
- мобильная разработка
- биг дата
- банковское ПО

карьерный план:
* разбиваем цель на этапы
* определяем требования подэтапов (англ, курсы повышения, ..)
* определения расстояния до цели/пункта. - через год получаю то-то.. 
* контроль выполнения

как строить карьеру:
* познакомиться с реруторами (ало, что есть на рынке?)
* ходить на форумы трудоустройств
* соревнования
* студенты старших курсов, специалисты в вашей области
* стажировки, временная работа, свой проект
* самообразование, книги, конференции(можно найти нужных людей)
* подписаться в вк на тимлидов

стажировки:
* хантив
* itmozg
* future today
* green tern. ru
* career.ru

резюме(ваши проекты, стартапы):
* github
* без вранья 
* делал то-то (изучал такие-то языки)


1) что вы хотит[я ищу работу junior прог python]
2) мои контактные данные, где живу. личная инфа []
3) опыт работы (начиная с полседнего места) -- реализованные проекты
4) образование
5) [почему хочу попать именно к вам] у вас используются такие технологии, ткакие-то проект, у вас лучшая команда я, потому хочу к вам. пожалйста рассмотрите резюме
с пруфом: работал там-то, нас было трое- работать в команде, прогал на том-то

рекрутинг:
jmc
спайс рекритнг

собеседование(подготовится к нему: посмотреть все о компании):
* понять что я буду делать на работе, какие будут коллеги
* понять перспективы
* соблюдать дедлайн при тестовых заданиях


принцип работы:
* ПОДТВЕРЖДЕННЫЕ СЕРТИФИКАТЫ
* ПОДТВЕРЖДЕННЫЕ ПРОЕКТЫ
* УМЕНИЕ ПОКАЗАТЬ ВЫГОДУ ШЕФУ


составляющие успеха:
* ежедневная работа
* умение общаться
* быть заметным и в компании и в глобальных содружествах (в меру хвалить себя. я седалл то-то, теперь все открывается быстрее на 30 сек, что экономит 300 часов в месяц -- на почут письма) НУЖНО ПОДРУЖИТЬСЯ СО ВСЕМИ (тогда пригласят друзья друзей..)
* ЗНАНИЕ ЯЗЫКОВ (english upper intermediate)
* сертификация


VMA + TECHLABS MICROSOFT + AZURE

говорите о том, как РЕШАТЬ БИЗНЕС_РОБЛЕМУ -- как наварится кароч(я могу сдлеать так, что файлы будут находится вдва раза быстрее, хранилище будет доступным всегда..) -- какой будет ПРОФИТ??
предложить схемы


СРОКИ
* я могу сделать это за месяц, если МЕНЯ НЕ БУДУТ ДЕРГАТЬ.
если будут - за два, три.

или я могу поработатьв  выходные, но за отгул


WEB

1) python + с (что будет в данном алгоритме/ напишите бла-бла для вывода такой вот строки)
2) сети + браузеры куки
3) sql
4) немного форм всяких, css(очень мало)


навыки:
1) что будет если (с++)

логический тест для программистов:\
школьное гиа, двоичные системы, hex

высшая математика:

1) гугл + вольфрам
2) линал

linux:

вопросы на команды, скрипты (как сделать арзив и тд)

(открываем терминал и тестим)



алгоритмы и структуры данных

что напечатает прога (с++)
- какой уровень у такого-то алгоритма
- графы
-надо знать виды сортировок и тд


Яндекс:

Вот какие материалы я использовал, когда готовился к собеседованиям:
Задачи на собеседованиях в Яндексе
Лекции ШАД Яндекса
Другие образовательные материалы Яндекса

М. Купер — «Advanced BASH scripting guide»
Язык обработки структурированных текстов AWK
Т. Кормен — «Алгоритмы. Построение и анализ»
Б. Керниган, Р. Пайк — «Практика программирования»
М. Лутц — «Изучаем Python»
С. МакКоннел — «Совершенный код»
Э. С. Реймонд — «Искусство программирования для UNIX»
У. Стивенс, С. Раго — «UNIX. Профессиональное программирование»
ISTQB Foundation level syllabus, Test Analyst Syllabus
Learn Git branching
Linux from scratch
Книги про Linux-администрирование (много разных)
Книги, manpages и RFC про TCP/IP и сетевые протоколы

Вот какие материалы я использовал бы для подготовки к собеседованиям, если бы знал о них:
Лекции КИТ Яндекса
Г. Саттер, А. Александреску — «Стандарты программирования на С++»


